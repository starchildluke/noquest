---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';


export const sortByDate = (a, b) => {
  return new Date(b.data.pubDate) - new Date(a.data.pubDate);
}

export async function getStaticPaths() {
  const posts = await getCollection('music');
  const numberOfPosts = posts.length;
  return posts.sort(sortByDate).map((album, i) => ({
    params: { slug: album.slug },
    props: {
      album,
      prevPost: // Previous post
          i + 1 === numberOfPosts // If the current post is the oldest
            ? { frontmatter: ""}
            : posts[i + 1],
      nextPost: // Next post
        i === 0 // If the current post is the newest
          ? { frontmatter: "" }
          : posts[i - 1],
        }
  }));
}

type Props = CollectionEntry<'music'>;

const { album, prevPost, nextPost, prevSlug, prevTitle, nextSlug, nextTitle, contentType, title, linerNotes, pubDate, image, url } = Astro.props;
const { Content } = await album.render();

---
<BaseLayout title={album.data.title} description={album.data.linerNotes} pubDate={album.data.pubDate}>

    <article class="content">
      <p class="publish-date"><FormattedDate date={album.data.pubDate} /></p>
          <AlbumCard title={album.data.title}, linerNotes={album.data.linerNotes}, pubDate={album.data.pubDate}, image={album.data.image} url={album.data.url ? album.data.url : album.body}>
            <Content />
          </AlbumCard>

            <PrevNextLinking contentType="music" prevPost={prevPost.data} nextPost={nextPost.data} prevSlug={prevPost?.slug} prevTitle={prevPost.data?.title} nextSlug={nextPost?.slug} nextTitle={nextPost.data?.title} />
    </article>
</BaseLayout>